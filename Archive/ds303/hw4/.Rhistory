knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
head(prostate)
regfit = regsubsets(lpsa~., data=prostate)
regfit = regsubsets(lpsa~., data=prostate)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(leaps)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
regfit = regsubsets(lpsa~., data=prostate)
summary(regfit)
regfit = regsubsets(lpsa~., data=prostate)
fitSum = summary(regfit)
fitSum
names(fitSum)
n = dim(prostate[1])
n = dim(prostate[1])
p = rowSums(fitSum$adjr2)
n = dim(prostate)[1]
p = rowSums(fitSum$adjr2)
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
plot(p,BIC)
plot(p,AIC)
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
regfit = regsubsets(lpsa~., data=prostate)
fitSum = summary(regfit)
fitSum
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
train = subset(prostate, train==TRUE)[,1:9]
train = subset(prostate, train==FALSE)[,1:9]
MSEs <- c()
fits = regsubsets(lpsa~., data=train)
fits$which
train = subset(prostate, train==TRUE)[,1:9]
train = subset(prostate, train==FALSE)[,1:9]
MSEs <- c()
fits = regsubsets(lpsa~., data=train)
fits = summary(fits)
train = subset(prostate, train==TRUE)[,1:9]
train = subset(prostate, train==FALSE)[,1:9]
MSEs <- c()
fits = summary(regsubsets(lpsa~., data=train))
fits$which
train = subset(prostate, train==TRUE)[,1:9]
train = subset(prostate, train==FALSE)[,1:9]
MSEs <- c()
fits = summary(regsubsets(lpsa~., data=train))
fits$which
head(train)
?train
for(i in 1:8) {
predictors = train[, c(fits$which[i,], TRUE) ]
model = lm(lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
train = subset(prostate, train==TRUE)[,1:9]
test = subset(prostate, train==FALSE)[,1:9]
MSEs <- c()
fits = summary(regsubsets(lpsa~., data=train))
fits$which
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
MSEs
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
regfit = regsubsets(lpsa~., data=prostate)
fitSum = summary(regfit)
fitSum
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
train = subset(prostate, train==TRUE)[,1:9]
test = subset(prostate, train==FALSE)[,1:9]
MSEs <- c()
fits = summary(regsubsets(lpsa~., data=train))
fits$which
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
MSEs <- c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, c(i, mean((test$lpsa - predicted)^2)))
}
MSEs
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, c(i, mean((test$lpsa - predicted)^2)))
}
MSEs
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, cbind(i, mean((test$lpsa - predicted)^2)))
}
MSEs
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
finalModel = lm(lpsa~., data=prostate)
summary(finalModel)
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
finalModel = lm(lpsa~lcavol+lweight+lbph+svi+lcp+pgg45, data=prostate)
summary(finalModel)
install.packages("caret")
install.packages("caret")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
install.packages("caret")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
install.packages("recipes")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(recipes)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
install.packages("installr")
install.packages("Rtools")
updateR()
library(installr)
updateR()
updateR()
install.packages("caret")
install.packages("Rtools")
Version()
R.Version()
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
install.packages("tidyverse")
install.packages("leaps")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
regfit = regsubsets(lpsa~., data=prostate)
fitSum = summary(regfit)
fitSum
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
train = subset(prostate, train==TRUE)[,1:9]
test = subset(prostate, train==FALSE)[,1:9]
fits = summary(regsubsets(lpsa~., data=train))
fits$which
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
finalModel = lm(lpsa~lcavol+lweight+lbph+svi+lcp+pgg45, data=prostate)
summary(finalModel)
R.Version()
folds <- createFolds(prostate$lpsa, k = 10, list = TRUE, returnTrain = FALSE)
names(flds)
folds <- createFolds(prostate$lpsa, k = 10, list = TRUE, returnTrain = FALSE)
names(folds)
k = 10
folds <- createFolds(prostate$lpsa, k = k, list = TRUE, returnTrain = FALSE)
MSE_M1 = MSE_M2 = rep(NA,k)
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
which.min(MSEs)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
regfit = regsubsets(lpsa~., data=prostate)
fitSum = summary(regfit)
fitSum
n = dim(prostate)[1]
p = rowSums(fitSum$which)
adjr2 = fitSum$adjr2
cp = fitSum$cp
rss = fitSum$rss
AIC = n*log(rss/n) + 2*p
BIC = n*log(rss/n) + p*log(n)
cbind(p,rss,adjr2,cp,AIC,BIC)
train = subset(prostate, train==TRUE)[,1:9]
test = subset(prostate, train==FALSE)[,1:9]
fits = summary(regsubsets(lpsa~., data=train))
fits$which
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
MSEs
finalModel = lm(lpsa~lcavol+lweight+lbph+svi+lcp+pgg45, data=prostate)
summary(finalModel)
k = 10
folds <- createFolds(prostate$lpsa, k = k, list = TRUE, returnTrain = FALSE)
MSE_M1 = MSE_M2 = rep(NA,k)
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
which.min(MSEs)
}
k = 10
folds <- createFolds(prostate$lpsa, k = k, list = TRUE, returnTrain = FALSE)
MSE_M1 = MSE_M2 = rep(NA,k)
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
print(which.min(MSEs))
}
k = 10
folds <- createFolds(prostate$lpsa, k = k, list = TRUE, returnTrain = FALSE)
MSE_M1 = MSE_M2 = rep(NA,k)
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
print(which.min(MSEs))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(tidyverse)
library(ggplot2)
library(leaps)
library(caret)
prostate = read.table('C:/users/15155/desktop/ds303/hw4/prostate.data', header=TRUE)
k = 10
folds <- createFolds(prostate$lpsa, k = k, list = TRUE, returnTrain = FALSE)
MSE_M1 = MSE_M2 = rep(NA,k)
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
print(which.min(MSEs))
}
train
typeof(train)
train$lpsa
k = 10
folds <- createFolds(prostate$lpsa, k = k, list = TRUE, returnTrain = FALSE)
MSE_M1 = MSE_M2 = rep(NA,k)
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
print(which.min(MSEs))
}
typeof(prostate)
prostate
prostate$lcavol
train$lcavol
folds
test = prostate[test_index,]
train = prostate[-test_index,]
train$lcavol
predictors = train[, fits$which[1,]]
for(i in 1:k){
test_index = folds[[i]]
test = prostate[test_index,]
train = prostate[-test_index,]
fits = summary(regsubsets(lpsa~., data=train))
MSEs = c()
for(i in 1:8) {
predictors = train[, fits$which[i,] ]
model = lm(train$lpsa~., data=predictors)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$lpsa - predicted)^2))
}
print(which.min(MSEs))
}
model = lm(train$lpsa~., data=predictors)
train$lpsa
train <- as.data.frame(train)
typeof(train)
train
model = lm(train$lpsa~., data=predictors)
