predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs))
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="blue")
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="blue", lw=5)
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="blue", lw=5)
legend(x=mean(MSEs), legend=c("Mean"))
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="blue", lw=5)
print(mean(MSEs))
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="blue", lw=5)
print(mean(MSEs))
set.seed(42)
n=100
b0 = 3
b1 = 2
b2 = 4
x1 = runif(100)
x2 = rnorm(100,0,1)
y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
data <- data.frame(
x1 = x1,
x2 = x2,
y = y
)
cor(data$x1, data$x2)
set.seed(24)
x1 = runif(100)
x2 = rnorm(100,0,1)
y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
data <- data.frame(
x1 = x1,
x2 = x2,
y = y
)
cor(data$x1, data$x2)
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="red", lw=5)
print(mean(MSEs))
Auto %>% select(-name) -> Auto
Auto %>% select(-name) -> Auto
str(Auto)
install.packages(ggally)
install.packages("ggally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
set.seed(42)
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(ggally)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
set.seed(42)
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
install.packages("GGally")
install.packages("GGally")
install.packages("ggplot2")
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
summary(lm(mpg~., data=Auto))
hist(Auto$year)
plot(x=data$y, y=model$residuals)
length(data$y)
model = lm(mpg~., data=Auto)
summary(model)
plot(x=data$y, y=model$residuals)
length(model$residuals)
plot(x=Auto$mpg, y=model$residuals)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)")
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
model = lm(mpg~., data=Auto)
summary(model)
VIF(model)
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
model = lm(mpg~., data=Auto)
summary(model)
VIF(model)
model = lm(mpg~., data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~., data=Auto)
summary(model)
model = lm(log(mpg)~cylinders+horsepower+weight+acceleration+year+origin, data=Auto)
summary(model)
model = lm(log(mpg)~cylinders+horsepower+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
model = lm(log(mpg)~cylinders+horsepower+weight+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
model = lm(log(mpg)~cylinders+horsepower+weight+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~cylinders+horsepower+weight+poly(acceleration, 3)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~cylinders+horsepower+weight+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~cylinders+weight+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~cylinders+weight+log(acceleration)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(log(mpg)~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((1/mpg)~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((1/mpg + 1)~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((1/log(mpg))~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~cylinders+displacement+horsepower+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~cylinders+horsepower+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~cylinders+horsepower+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~cylinders+weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((sqrt'(mpg))~weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((sqrt(mpg))~weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~weight+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+sqrt(acceleration)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+1/(acceleration)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+(1/acceleration)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
source('C:/Users/15155/Desktop/ds303/multiple_linear_regression/MLR_Transformations.R', echo=TRUE)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+log(acceleration)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
plot(Auto$acceleration,Auto$mpg)
plot(Auto$year, Auto$mpg)
plot(Auto$origin, Auto$mpg)
Auto$origin <- as.factor(Auto$origin)
model = lm((log(mpg))~poly(weight, 2)+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
plot(Auto$acceleration, Auto$mpg)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 1.5)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 1)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 3)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
str(Credit)
fit = lm(Balance~Income+Student, data=Credit)
summary(fit)
ggplot(Credit, aes(x=Income, y=Balance, color=Student)) +
geom_point() +
geom_smooth(method=lm)
interactionFit <- lm(Balance ~ Income + Student + Income:Student, data=Credit)
summary(interactionFit)
set.seed(42)
n=100
b0 = 3
b1 = 2
b2 = 4
x1 = runif(100)
x2 = 0.8*x1 + rnorm(n, 0, 0.1)
y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
data <- data.frame(
x1 = x1,
x2 = x2,
y = y
)
cor(data$x1, data$x2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSE_Test = mean((test$y - predicted)^2)
print(MSE_Test)
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="blue", lw=5)
print(mean(MSEs))
set.seed(24)
x1 = runif(100)
x2 = rnorm(100,0,1)
y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
data <- data.frame(
x1 = x1,
x2 = x2,
y = y
)
cor(data$x1, data$x2)
MSEs <- c()
for (i in 1:2500) {
data$y = b0 + b1*x1 + b2*x2 + rnorm(n, 0, 2)
train_index = sample(1:n,n/2,rep=FALSE)
train = data[train_index,]
test = data[-train_index,]
model = lm(y~x1+x2, data=train)
predicted = predict(model, test)
MSEs = append(MSEs, mean((test$y - predicted)^2))
}
hist(MSEs)
abline(v=mean(MSEs), col="red", lw=5)
print(mean(MSEs))
Auto %>% select(-name) -> Auto
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
str(Auto)
Auto$origin <- as.numeric(as.character(Auto$origin))
str(Auto)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year+origin, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+poly(acceleration, 2)+year, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(weight, 2)+acceleration+year, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
ggpairs(Auto, title="A Correlogram with all vars in Auto except Name")
model = lm((log(mpg))~poly(horsepower, 2)+acceleration+year, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(horsepower, 2)+poly(acceleration, 2)+year, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(horsepower, 2)+acceleration+year, data=Auto)
summary(model)
vif(model)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(horsepower, 2)+acceleration+year, data=Auto)
summary(model)
vif(model)
mean(model$residuals^2)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm(mpg~., data=Auto)
summary(model)
vif(model)
mean(model$residuals^2)
model = lm((log(mpg))~poly(horsepower, 2)+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
mean(model$residuals^2)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
model = lm((log(mpg))~poly(horsepower, 2)+acceleration+year+origin, data=Auto)
summary(model)
vif(model)
mean(model$residuals^2)
plot(x=Auto$mpg, y=model$residuals, xlab="MPG (Y)", ylab="Residuals")
abline(h=0)
