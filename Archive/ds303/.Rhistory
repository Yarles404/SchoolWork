m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
set.seed(1)
n = 100
x = runif(n, min=0, max=2)
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
x0 = data.frame(x = 0.9)
predict(m1, x0)
predict(m2, x0)
predict(m3, x0)
predict(m4, x0)
predict(m5, x0)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
print(4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
set.seed(1)
n = 100
x = runif(n, min=0, max=2)
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
x0 = data.frame(x = 0.9)
predict(m1, x0)
predict(m2, x0)
predict(m3, x0)
predict(m4, x0)
predict(m5, x0)
print(4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
train_set$y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set$y = y
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
set.seed(1)
n = 100
x = runif(n, min=0, max=2)
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
x0 = data.frame(x = 0.9)
predict(m1, x0)
predict(m2, x0)
predict(m3, x0)
predict(m4, x0)
predict(m5, x0)
print(4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5 + rnorm(1000, 0, 1)
test_set = data.frame(x0, y0)
m1_MSE = mean((m1_pred - test_set$y)^2)
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5 + rnorm(1000, 0, 1)
test_set = data.frame(x0, y0)
m1_tMSE = mean((m1_pred - test_set$y)^2)
m2_tMSE = mean((m2_pred - test_set$y)^2)
m3_tMSE = mean((m3_pred - test_set$y)^2)
m4_tMSE = mean((m4_pred - test_set$y)^2)
m5_tMSE = mean((m5_pred - test_set$y)^2)
print(m1_tMSE)
print(m2_tMSE)
print(m3_tMSE)
print(m4_tMSE)
print(m5_tMSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
set.seed(1)
n = 100
x = runif(n, min=0, max=2)
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
x0 = data.frame(x = 0.9)
predict(m1, x0)
predict(m2, x0)
predict(m3, x0)
predict(m4, x0)
predict(m5, x0)
print(4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5 + rnorm(1000, 0, 1)
test_set = data.frame(x0, y0)
m1_tMSE = mean((m1_pred - test_set$y)^2)
m2_tMSE = mean((m2_pred - test_set$y)^2)
m3_tMSE = mean((m3_pred - test_set$y)^2)
m4_tMSE = mean((m4_pred - test_set$y)^2)
m5_tMSE = mean((m5_pred - test_set$y)^2)
print(m1_tMSE)
print(m2_tMSE)
print(m3_tMSE)
print(m4_tMSE)
print(m5_tMSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
set.seed(1)
n = 100
x = runif(n, min=0, max=2)
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
x0 = data.frame(x = 0.9)
predict(m1, x0)
predict(m2, x0)
predict(m3, x0)
predict(m4, x0)
predict(m5, x0)
print(4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5 + rnorm(1000, 0, 1)
test_set = data.frame(x=x0, y=y0)
m1_tMSE = mean((m1_pred - test_set$y)^2)
m2_tMSE = mean((m2_pred - test_set$y)^2)
m3_tMSE = mean((m3_pred - test_set$y)^2)
m4_tMSE = mean((m4_pred - test_set$y)^2)
m5_tMSE = mean((m5_pred - test_set$y)^2)
print(m1_tMSE)
print(m2_tMSE)
print(m3_tMSE)
print(m4_tMSE)
print(m5_tMSE)
y_true = 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5)
y_true = 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5
print(y_true)
y_true = 4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5
print(y_true)
our_bias = function(predicted, truth) {
(mean(predicted) - truth)^2
}
our_var = function(predicted) {
mean((predicted - mean(predicted))^2)
}
our_bias(m1_pred, y_true)
our_var(m1_pred)
our_bias(m2_pred, y_true)
our_var(m2_pred)
our_bias(m3_pred, y_true)
our_var(m3_pred)
our_bias(m4_pred, y_true)
our_var(m4_pred)
our_bias(m5_pred, y_true)
our_var(m5_pred)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results="hide")
library(ISLR2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(GGally)
library(car)
set.seed(1)
n = 100
x = runif(n, min=0, max=2)
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
x0 = data.frame(x = 0.9)
predict(m1, x0)
predict(m2, x0)
predict(m3, x0)
predict(m4, x0)
predict(m5, x0)
y_true = 4 + 0.9 + 0.9^2 + 0.9^3 + 0.9^4 +0.9^5
print(y_true)
m1_pred = c()
m2_pred = c()
m3_pred = c()
m4_pred = c()
m5_pred = c()
for (i in 1:1000) {
# Generate new Y values
error = rnorm(n, 0, 1)
y = 4 + x + x^2 + x^3 + x^4 +x^5 + error
train_set = data.frame(x, y)
m1 = lm(y~x, data=train_set)
m2 = lm(y~poly(x, degree=2), data=train_set)
m3 = lm(y~poly(x, degree=3), data=train_set)
m4 = lm(y~poly(x, degree=5), data=train_set)
m5 = lm(y~poly(x, degree=11), data=train_set)
m1_pred = append(m1_pred, predict(m1, x0))
m2_pred = append(m2_pred, predict(m2, x0))
m3_pred = append(m3_pred, predict(m3, x0))
m4_pred = append(m4_pred, predict(m4, x0))
m5_pred = append(m5_pred, predict(m5, x0))
}
head(m1_pred, 5)
head(m2_pred, 5)
head(m3_pred, 5)
head(m4_pred, 5)
head(m5_pred, 5)
x0 = rep(0.9, 1000)
y0 = 4 + x0 + x0^2 + x0^3 + x0^4 +x0^5 + rnorm(1000, 0, 1)
test_set = data.frame(x=x0, y=y0)
m1_tMSE = mean((m1_pred - test_set$y)^2)
m2_tMSE = mean((m2_pred - test_set$y)^2)
m3_tMSE = mean((m3_pred - test_set$y)^2)
m4_tMSE = mean((m4_pred - test_set$y)^2)
m5_tMSE = mean((m5_pred - test_set$y)^2)
print(m1_tMSE)
print(m2_tMSE)
print(m3_tMSE)
print(m4_tMSE)
print(m5_tMSE)
our_bias = function(predicted, truth) {
(mean(predicted) - truth)^2
}
our_var = function(predicted) {
mean((predicted - mean(predicted))^2)
}
our_bias(m1_pred, y_true)
our_var(m1_pred)
our_bias(m2_pred, y_true)
our_var(m2_pred)
our_bias(m3_pred, y_true)
our_var(m3_pred)
our_bias(m4_pred, y_true)
our_var(m4_pred)
our_bias(m5_pred, y_true)
our_var(m5_pred)
